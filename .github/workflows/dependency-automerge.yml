name: Auto-Merge Dependency PRs

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - labeled
  workflow_dispatch: # ✅ Allow manual runs

permissions:
  pull-requests: write
  contents: write
  actions: read

jobs:
  process-prs:
    runs-on: ubuntu-latest

    steps:
      # ✅ Step 1: Checkout the repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # ✅ Step 2: Set Git Bot Identity 
      - name: Set Git Identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      # ✅ Step 3: Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        run: gh auth setup-git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Step 4: Fetch all PRs sorted from oldest to newest
      - name: Get Oldest PRs
        id: get-prs
        run: |
          prs=$(gh pr list --state open --json number,createdAt --jq 'sort_by(.createdAt) | .[].number')
          echo "prs=$prs" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ✅ Step 5: Process PRs One by One
      - name: Process PRs
        run: |
          for pr in $prs; do
            echo "Processing PR #$pr"
            gh pr checkout $pr

            # ✅ Find all valid subfolders with a package.json
            for dir in $(find . -type f -name "package.json" -not -path "*/node_modules/*" -exec dirname {} \; | sort -u); do
              echo "Processing dependencies in $dir..."
              
              # ✅ Ensure package.json exists in the current branch
              if [ ! -f "$dir/package.json" ]; then
                echo "Skipping $dir - package.json not found."
                continue
              fi

              # ✅ Handle package.json merge conflicts
              git checkout --ours "$dir/package.json" || true
              git add "$dir/package.json" || true

              # ✅ If package.json was changed, regenerate package-lock.json
              if git diff --name-only | grep "$dir/package.json"; then
                echo "package.json had conflicts in $dir, running npm install..."
                cd $dir
                npm install
                cd -
                git add "$dir/package-lock.json"
              fi
            done

            # ✅ Commit & push resolved conflicts
            git commit -m "Resolve dependency conflicts in PR #$pr" || true
            git push origin HEAD || true

            # ✅ Approve PR before merging
            gh pr review $pr --approve

            # ✅ Merge PR when possible, otherwise skip
            gh pr merge $pr --squash --auto || echo "Skipping auto-merge due to branch protection settings."
            echo "Processed PR #$pr!"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
